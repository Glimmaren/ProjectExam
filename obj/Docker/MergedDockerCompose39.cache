name: dockercompose9688116401047160983
services:
  catalog:
    build:
      context: C:\Users\glimm\OneDrive\Dokument\ITHS\Projects\ProjectExam
      dockerfile: Catalog/Dockerfile
    container_name: catalog-api
    environment:
      DB_HOST: catalogdb
      DB_NAME: catalog
      DB_SA_PASSWORD: password@1234#
    image: catalog
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      published: "8004"
      protocol: tcp
  catalogdb:
    container_name: catalog-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: password@1234#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "8003"
      protocol: tcp
  customer:
    build:
      context: C:\Users\glimm\OneDrive\Dokument\ITHS\Projects\ProjectExam
      dockerfile: Costumer/Dockerfile
    container_name: customer-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: customerdb
      DB_NAME: customer
      DB_SA_PASSWORD: password@1234#
    image: customer
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8002"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\glimm\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  customerdb:
    container_name: customer-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: password@1234#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "8001"
      protocol: tcp
networks:
  backend:
    name: dockercompose9688116401047160983_backend